{"ast":null,"code":"import axios from '../axiosConfig';\nimport multer from \"multer\";\nimport path from \"path\";\nvar storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, './public/images/uploads');\n  },\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + path.extname(file.originalname));\n  }\n});\nvar upload = multer({\n  storage: storage,\n  fileFilter: (req, file, cb) => {\n    if (file.mimetype == \"image/png\" || file.mimetype == \"image/jpg\" || file.mimetype == \"image/jpeg\") {\n      cb(null, true);\n    } else {\n      req.fileValidationError = 'Only .png, .jpg and .jpeg format allowed!';\n      return cb(null, false, new Error('Only .png, .jpg and .jpeg format allowed!'));\n    }\n  }\n});\n\nconst addbook = async Book => {\n  try {\n    const res = await axios.post('/books', upload.single('image'), {\n      title: Book.title,\n      author: Book.author,\n      subject: Book.subject,\n      price: Book.price\n    });\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nconst bookById = async Bookid => {\n  try {\n    console.log(Bookid);\n    const res = await axios.get('/books/' + Bookid);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nconst ownedbooks = async username => {\n  //console.log(\"inside login\");\n  try {\n    const res = await axios.get('/books/bookByOwner/' + username);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nconst favouritebooks = async username => {\n  //console.log(\"inside login\");\n  try {\n    const res = await axios.get('/cart/cartByOwner/' + username);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nconst bookBySubject = async subject => {\n  try {\n    const res = await axios.get('/books/bookBySubject/' + subject);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nconst bookByAuthor = async author => {\n  try {\n    const res = await axios.get('/books/bookByAuthor/' + author);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nconst bookByName = async Name => {\n  try {\n    console.log(Name);\n    const res = await axios.get('/books/bookByName/' + Name);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nconst getOwnerInfo = async bookId => {\n  try {\n    console.log(bookId);\n    const res = await axios.get('/books/getOwnerInfo/' + bookId);\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.log(err.res);\n  }\n};\n\nexport { addbook, ownedbooks, favouritebooks, bookByName, bookByAuthor, bookBySubject, bookById, getOwnerInfo };","map":{"version":3,"sources":["C:/Users/Jugru/Desktop/projStuff/wta/client/src/Api-requests/bookRequests.js"],"names":["axios","multer","path","storage","diskStorage","destination","req","file","cb","filename","fieldname","Date","now","extname","originalname","upload","fileFilter","mimetype","fileValidationError","Error","addbook","Book","res","post","single","title","author","subject","price","console","log","err","bookById","Bookid","get","ownedbooks","username","favouritebooks","bookBySubject","bookByAuthor","bookByName","Name","getOwnerInfo","bookId"],"mappings":"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","sourcesContent":["import axios from '../axiosConfig'\r\nimport multer from \"multer\"\r\nimport path from \"path\"\r\nvar storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n      cb(null, './public/images/uploads')\r\n    },\r\n    filename: function (req, file, cb) {\r\n      cb(null, file.fieldname + '-' + Date.now()+path.extname(file.originalname))\r\n    }\r\n  })\r\n  \r\n  var upload = multer({ storage: storage,\r\n  \r\n    fileFilter: (req, file, cb) => {\r\n      if (file.mimetype == \"image/png\" || file.mimetype == \"image/jpg\" || file.mimetype == \"image/jpeg\") {\r\n        cb(null, true);\r\n      } else {\r\n        req.fileValidationError = 'Only .png, .jpg and .jpeg format allowed!';\r\n        return cb(null, false,new Error('Only .png, .jpg and .jpeg format allowed!'));\r\n  \r\n      }\r\n    }\r\n  });\r\nconst addbook = async(Book)=>{\r\n    try{\r\n        const res = await axios.post('/books',upload.single('image'),{\r\n            title:Book.title,\r\n            author:Book.author,\r\n            subject:Book.subject,\r\n            price:Book.price\r\n        });\r\n        console.log(res);\r\n        return res;\r\n\r\n    }\r\n    catch(err){\r\n        \r\n        console.log(err.res);}\r\n\r\n}\r\nconst bookById = async(Bookid)=>{\r\n    try{\r\n        console.log(Bookid);\r\n        const res = await axios.get('/books/'+Bookid);\r\n        console.log(res);\r\n        return res;\r\n\r\n    }\r\n    catch(err){\r\n        \r\n        console.log(err.res);}\r\n}\r\nconst ownedbooks =  async (username)=>{\r\n    //console.log(\"inside login\");\r\n    \r\n    try{\r\n        const res = await axios.get('/books/bookByOwner/'+username);\r\n        console.log(res);\r\n        return res;\r\n\r\n    }\r\n    catch(err){\r\n        \r\n        console.log(err.res);}\r\n    }\r\n    const favouritebooks =  async (username)=>{\r\n        //console.log(\"inside login\");\r\n        \r\n        try{\r\n            const res = await axios.get('/cart/cartByOwner/'+username);\r\n            console.log(res);\r\n            return res;\r\n    \r\n        }\r\n        catch(err){\r\n            \r\n            console.log(err.res);}\r\n        }\r\n    const bookBySubject = async(subject)=>{\r\n        try{\r\n            const res = await axios.get('/books/bookBySubject/'+subject);\r\n            console.log(res);\r\n            return res;\r\n    \r\n        }\r\n        catch(err){\r\n            \r\n            console.log(err.res);}\r\n    }\r\n    const bookByAuthor = async(author)=>{\r\n        try{\r\n            const res = await axios.get('/books/bookByAuthor/'+author);\r\n            console.log(res);\r\n            return res;\r\n    \r\n        }\r\n        catch(err){\r\n            \r\n            console.log(err.res);}\r\n    }\r\n    const bookByName = async(Name)=>{\r\n        try{\r\n            console.log(Name);\r\n            const res = await axios.get('/books/bookByName/'+Name);\r\n            console.log(res);\r\n            return res;\r\n    \r\n        }\r\n        catch(err){\r\n            \r\n            console.log(err.res);}\r\n    }\r\n    const getOwnerInfo = async(bookId)=>{\r\n        try{\r\n            console.log(bookId);\r\n            const res = await axios.get('/books/getOwnerInfo/'+bookId);\r\n            console.log(res);\r\n            return res;\r\n    \r\n        }\r\n        catch(err){\r\n            \r\n            console.log(err.res);}\r\n    }\r\nexport {addbook,ownedbooks,favouritebooks,bookByName,bookByAuthor,bookBySubject,bookById,getOwnerInfo};"]},"metadata":{},"sourceType":"module"}